name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run tests
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq xvfb libxdo-dev
          bash -c "curl -s $repo | $parse | wget -qi -"
          tar -xzf cargo-tarpaulin-*.tar.gz
          mv cargo-tarpaulin ~/.cargo/bin/
          bash -c "$xvfb $test1"
          mv cobertura.xml main_coverage.xml
          bash -c "$xvfb $test2"
          mv cobertura.xml feat_coverage.xml
        env:
          repo: 'https://api.github.com/repos/xd009642/tarpaulin/releases/latest'
          parse: 'grep "browser_download_url.*tar.gz" | cut -d : -f 2,3 | tr -d \"'
          xvfb: 'xvfb-run --server-args="-screen 0 1366x768x24"'
          test1: 'cargo tarpaulin -o Xml -v -- "test" rec'
          test2: 'cargo tarpaulin --features ski -o Xml -v -- "test" rec'
      - name: Upload reports to Codecov
        uses: codecov/codecov-action@v1.0.7
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./*_coverage.xml
          flags: unittests
          name: code-coverage-report
          fail_ci_if_error: true

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
