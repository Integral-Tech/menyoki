name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run tests
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq xvfb libxdo-dev
          export CARGO_INCREMENTAL=0
          export RUSTFLAGS="$rustflags"
          export RUSTDOCFLAGS="-Cpanic=abort"
          bash -c "curl -L $repo | tar jxf -"
          bash -c "$test && $test $features && $xvfb $test $ignored"
          bash -c "$zip && $grcov && $upload"
        env:
          repo: 'https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2'
          rustflags: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
          xvfb: 'xvfb-run --server-args="-screen 0 1366x768x24"'
          test: 'cargo test --verbose $CARGO_OPTIONS'
          features: '--features ski'
          ignored: '-- --ignored'
          zip: 'zip -0 ccov.zip `find . \( -name "tgif*.gc*" \) -print`'
          grcov: './grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info'
          upload: 'bash <(curl -s https://codecov.io/bash) -v -f lcov.info'

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
