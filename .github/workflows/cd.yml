name: Continuous Deployment

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish-github:
    name: Publish on GitHub
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux-gnu, linux-musl]
        include:
        - build: linux-gnu
          os: ubuntu-18.04
          toolchain: stable
          target: x86_64-unknown-linux-gnu
        - build: linux-musl
          os: ubuntu-18.04
          toolchain: stable
          target: x86_64-unknown-linux-musl
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Install packages (linux)
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends --allow-unauthenticated libx11-dev musl-tools
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true
      - name: Build the project
        run: PKG_CONFIG_ALLOW_CROSS=1 cargo build --verbose --release --locked --target ${{ matrix.target }}
      - name: Prepare assets
        run: |
          mkdir assets
          cp -t assets/ LICENSE README.md CHANGELOG.md
          cp -t assets/ --parents completions/* && rm -f assets/completions/generate.sh
          cp -t assets/ --parents config/menyoki.conf
          if [ "${{ matrix.os }}" = "ubuntu-18.04" ]; then
            cp -t assets/ --parents man/*
            cp -t assets/ target/${{ matrix.TARGET }}/release/menyoki && strip -s assets/menyoki
            mv assets/ menyoki-${{ env.RELEASE_VERSION }}/
            tar -czvf menyoki-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz menyoki-${{ env.RELEASE_VERSION }}
            sha512sum menyoki-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz > menyoki-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz.sha512
            echo "${{ secrets.GPG_RELEASE_KEY }}" | base64 --decode > release.key
            echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --pinentry-mode=loopback --passphrase-fd 0 --import release.key
            echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --pinentry-mode=loopback --passphrase-fd 0 --detach-sign menyoki-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz
          fi
      - name: Upload assets (linux)
        if: matrix.os == 'ubuntu-18.04'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            menyoki-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz
            menyoki-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz.sig
            menyoki-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz.sha512
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crates-io:
    name: Publish on crates.io
    needs: ['publish-github']
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
    - name: Publish
      uses: actions-rs/cargo@v1
      with:
        command: publish
        args: --locked --token ${{ secrets.CARGO_TOKEN }}
